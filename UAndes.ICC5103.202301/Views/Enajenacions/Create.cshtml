@using UAndes.ICC5103._202301.Models
@model UAndes.ICC5103._202301.Models.Enajenacion

@{
    ViewBag.Title = "Create";
}

<h2>NUEVA DECLARACION SOBRE ENAJENACION E INSCRIPCION DE BIENES RAICES (F2890)</h2>

    

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.CNE, "Código Naturaleza Escritura", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CNE, new SelectList(
                new List<SelectListItem>
                {
                    new SelectListItem { Text = "Compraventa", Value = "1" },
                    new SelectListItem { Text = "Herencia", Value = "2" },
                    new SelectListItem { Text = "Otro", Value = "3" },
                    new SelectListItem { Text = "Resciliación", Value = "4" },
                    new SelectListItem { Text = "Transferencia de dominio", Value = "5" },
                    new SelectListItem { Text = "Bienes Nacionales", Value = "6" }
                }, "Value", "Text"), "Seleccione Código Naturalez Escritura", new { @class = "form-control", @required = "required", id = "Comunas-Dropdown" })
            @Html.ValidationMessageFor(model => model.CNE, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Comuna, "Comuna", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Comuna, new SelectList(ViewBag.comunas), "Seleccione una Comuna", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Comuna, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Manzana, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Manzana, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese Manzana", @required = "required" } })
            @Html.ValidationMessageFor(model => model.Manzana, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RolPredial, "Predio", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RolPredial, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese Predio", @required = "required" } })
            @Html.ValidationMessageFor(model => model.RolPredial, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" id="input-div-enajentes">
        @Html.LabelFor(model => model.Enajenantes, htmlAttributes: new { @class = "control-label col-md-2" })

        <div id="input-boxes-enajentes" class="col-md-10">

            <div class="input-group mb-3">
                <input type="text" class="form-control" name="inputEnajentes[]" placeholder="Ingrese Rut">
                <input type="text" class="form-control" name="inputEnajentes[]" placeholder="ingrese % Derechos">
            </div>

            <div class="form-check">
                <input type="checkbox" class="form-check-input" name="inputEnajentes[]" value="YES">
                <label class="form-check-label" for="flexCheckDefault">
                    % Derechos No Acreditados
                </label>
            </div>

        </div>

        <div class="col-md-offset-2 col-md-10">
            <button type="button" id="add-box-enajentes" class="btn btn-primary">Add Box</button>
            <button type="button" id="remove-box-enajentes" class="btn btn-danger">Remove Box</button>
        </div>


    </div>
    


    <div class="form-group">
        @Html.LabelFor(model => model.Adquirientes, htmlAttributes: new { @class = "control-label col-md-2" })

        <div id="input-boxes-adquirientes" class="col-md-10">

            <div class="input-group mb-3">
                <input type="text" class="form-control" name="inputAdquirientes[]" placeholder="Ingrese Rut">
                <input type="text" class="form-control" name="inputAdquirientes[]" placeholder="ingrese % Derechos">

            </div>

            <div class="form-check">
                <input type="checkbox" class="form-check-input" name="inputAdquirientes[]" value="YES">
                <label class="form-check-label" for="flexCheckDefault">
                    % Derechos No Acreditados
                </label>
            </div>

        </div>

        <div class="col-md-offset-2 col-md-10">
            <button type="button" id="add-box-adquirientes" class="btn btn-primary">Add Box</button>
            <button type="button" id="remove-box-adquirientes" class="btn btn-danger">Remove Box</button>
            @Html.ValidationMessageFor(model => model.Adquirientes, "", new { @class = "text-danger" })
        </div>


    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Foja, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Foja, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese Foja", @required = "required" } })
            @Html.ValidationMessageFor(model => model.Foja, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FechaInscripcion, "Fecha de Inscripcion", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FechaInscripcion, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese Fecha de Inscripcion", @required = "required" } })
            @Html.ValidationMessageFor(model => model.FechaInscripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NumeroInscripcion, "Numero de Inscripcion", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumeroInscripcion, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese Numero Inscripcion", @required = "required" } })
            @Html.ValidationMessageFor(model => model.NumeroInscripcion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="submit-data" type="submit" value="Create" class="btn btn-default" onchange="submitData()" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>

        const inputBoxesEnajentes = document.getElementById("input-boxes-enajentes");
        const addButtonEnajentes = document.getElementById("add-box-enajentes");
        const removeButtonEnajentes = document.getElementById("remove-box-enajentes");

        const inputBoxesAdquirientes = document.getElementById("input-boxes-adquirientes");
        const addButtonAdquirientes = document.getElementById("add-box-adquirientes");
        const removeButtonAdquirientes = document.getElementById("remove-box-adquirientes");


        // Add event listeners
        addButtonEnajentes.addEventListener("click", AddInputBoxEnajente);
        removeButtonEnajentes.addEventListener("click", RemoveInputBoxEnajente);

        addButtonAdquirientes.addEventListener("click", AddInputBoxAdquirientes);
        removeButtonAdquirientes.addEventListener("click", RemoveInputBoxAdquirientes);

        
        const PerformDropdownAction = function () {
            let current = this.value || document.getElementById('Comunas-Dropdown').value;
            const EnajenatesDIV = document.getElementById('input-div-enajentes');

            if (current == 1) {
                EnajenatesDIV.removeAttribute("hidden");
            }
            else if (current == 2) {
                EnajenatesDIV.setAttribute("hidden", "hidden");
            }
        }

        document.getElementById('Comunas-Dropdown').addEventListener('change', PerformDropdownAction);

        // Function to add an input box
        function AddInputBoxEnajente() {
            const NewInputBoxRut = document.createElement("input");
            NewInputBoxRut.type = "text";
            NewInputBoxRut.name = "inputEnajentes[]";
            NewInputBoxRut.placeholder = "Ingrese Rut";
            NewInputBoxRut.classList.add("form-control");
            NewInputBoxRut.required = "required";
            inputBoxesEnajentes.appendChild(NewInputBoxRut);

            const NewInputBoxPorcentaje = document.createElement("input");
            NewInputBoxPorcentaje.type = "text";
            NewInputBoxPorcentaje.name = "inputEnajentes[]";
            NewInputBoxPorcentaje.placeholder = "ingrese % Derechos";
            NewInputBoxPorcentaje.classList.add("form-control");
            NewInputBoxPorcentaje.required = "required";
            inputBoxesEnajentes.appendChild(NewInputBoxPorcentaje);

            const NewInputBoxCheck = document.createElement("input");
            NewInputBoxCheck.type = "checkbox";
            NewInputBoxCheck.name = "inputEnajentes[]";
            NewInputBoxCheck.value = "YES";
            
            
            NewInputBoxCheck.classList.add("form-check");
            inputBoxesEnajentes.appendChild(NewInputBoxCheck);

            const NewInputBoxCheckLabel = document.createElement("label");
            NewInputBoxCheckLabel.textContent = "% Derechos No Acreditados";
            NewInputBoxCheckLabel.classList.add("form-check-label");
            inputBoxesEnajentes.appendChild(NewInputBoxCheckLabel);



        }

        // La accion se repite 4 veces para elimar las casillas Rut, Porcentaje y Check junto a su Label
        function RemoveInputBoxEnajente() {
            const LastInputBoxRut = inputBoxesEnajentes.lastElementChild;
            if (LastInputBoxRut !== null) {
                inputBoxesEnajentes.removeChild(LastInputBoxRut);
            }

            const LastInputBoxPorcentaje = inputBoxesEnajentes.lastElementChild;
            if (LastInputBoxPorcentaje !== null) {
                inputBoxesEnajentes.removeChild(LastInputBoxPorcentaje);
            }

            const LastInputBoxCheck = inputBoxesEnajentes.lastElementChild;
            if (LastInputBoxCheck !== null) {
                inputBoxesEnajentes.removeChild(LastInputBoxCheck);
            }

            const LastInputBoxLabel = inputBoxesEnajentes.lastElementChild;
            if (LastInputBoxLabel !== null) {
                inputBoxesEnajentes.removeChild(LastInputBoxLabel);
            }
        }

        //Funciones addInputBox crean nuevas casillas para añadir nuevo enajenante o adquiriente
        function AddInputBoxAdquirientes() {
            const NewInputBoxRut = document.createElement("input");
            NewInputBoxRut.type = "text";
            NewInputBoxRut.name = "inputAdquirientes[]";
            NewInputBoxRut.placeholder = "Ingrese Rut";
            NewInputBoxRut.classList.add("form-control");
            NewInputBoxRut.required = "required";
            inputBoxesAdquirientes.appendChild(NewInputBoxRut);

            const NewInputBoxPorcentaje = document.createElement("input");
            NewInputBoxPorcentaje.type = "text";
            NewInputBoxPorcentaje.name = "inputAdquirientes[]";
            NewInputBoxPorcentaje.placeholder = "ingrese % Derechos";
            NewInputBoxPorcentaje.classList.add("form-control");
            NewInputBoxPorcentaje.required = "required";
            inputBoxesAdquirientes.appendChild(NewInputBoxPorcentaje);

            const NewInputBoxCheck = document.createElement("input");
            NewInputBoxCheck.type = "checkbox";
            NewInputBoxCheck.name = "inputAdquirientes[]";
            NewInputBoxCheck.value = "YES";
            
            NewInputBoxCheck.classList.add("form-check");
            
            inputBoxesAdquirientes.appendChild(NewInputBoxCheck);

            const NewInputBoxCheckLabel = document.createElement("label");
            NewInputBoxCheckLabel.textContent = "% Derechos No Acreditados";
            NewInputBoxCheckLabel.classList.add("form-check-label");
            inputBoxesAdquirientes.appendChild(NewInputBoxCheckLabel);

        }

        function RemoveInputBoxAdquirientes() {
            const LastInputBoxRut = inputBoxesAdquirientes.lastElementChild;
            if (LastInputBoxRut !== null) {
                inputBoxesAdquirientes.removeChild(LastInputBoxRut);
            }

            const LastInputBoxPorcentaje = inputBoxesAdquirientes.lastElementChild;
            if (LastInputBoxPorcentaje !== null) {
                inputBoxesAdquirientes.removeChild(LastInputBoxPorcentaje);
            }

            const LastInputBoxCheck = inputBoxesAdquirientes.lastElementChild;
            if (LastInputBoxCheck !== null) {
                inputBoxesAdquirientes.removeChild(LastInputBoxCheck);
            }

            const LastInputBoxLabel = inputBoxesAdquirientes.lastElementChild;
            if (LastInputBoxLabel !== null) {
                inputBoxesAdquirientes.removeChild(LastInputBoxLabel);
            }
        }


</script>
}
